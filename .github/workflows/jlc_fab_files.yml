name: PCB_FabFiles

on:
  push:
    paths:
    - '**.sch'
    - '**.kicad_pcb'
  pull_request:
    paths:
      - '**.sch'
      - '**.kicad_pcb'

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
          
  build_kicad_fabrication_files:
    name: Make PCB fabrication files
    runs-on: ubuntu-20.04
    needs: once
    steps:
    - uses: actions/checkout@v2
    - uses: INTI-CMNB/KiBot@v1_k6
      with:
      # Required - kibot config file
        config: pcb/jlcpcb_fab_files.kibot.yaml
      # optional - prefix to output defined in config
        dir: 'pcb'
      # optional - schematic file
        schema: 'pcb/SUAD.kicad_sch'
      # optional - PCB design file
        board: 'pcb/SUAD.kicad_pcb'
    - uses: vimtor/action-zip@v1
      name: Zip gerbers
      with:
        files: pcb/fabrication/gerbers
        dest: gerbers.zip
    - uses: actions/upload-release-asset@v1
      name: Upload gerber zipfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: gerbers.zip
        asset_name: Gerbers.zip
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      name: Upload BOM   
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: pcb/fabrication/bom_jlcpcb.csv
        asset_name: BOM.csv
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      name: Upload P&P file   
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: pcb/fabrication/position_jlcpcb.csv
        asset_name: PickPlace.csv
        asset_content_type: application/octet-stream
    - uses: author/action-rollback@stable
      name: Rollback release on failure
      if: failure()
      with:
        release_id: ${{ needs.once.outputs.id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}